IMPORT import\nIDENTIFIER re\nCOMMA ,\nIDENTIFIER macros\nMACRO macro\nIDENTIFIER multiMatch\nOPEN_PAREN (\nIDENTIFIER inp\nCOLON :\nIDENTIFIER string\nSEMI_COLON ;\nIDENTIFIER sections\nCOLON :\nIDENTIFIER untyped\nCLOSE_PAREN )\nCOLON :\nIDENTIFIER untyped\nEQUALS_OPERATOR =\nSTR_LIT "Multi regex match"\nDOT .\nIDENTIFIER Usage\nCOLON :\nIDENTIFIER multiMatch\nIDENTIFIER inp\nCOLON :\nOF of\nIDENTIFIER pattern\nCOLON :\nEQUALS_OPERATOR =\nIDENTIFIER matches\nOPEN_BRACK [\nCLOSE_BRACK ]\nOF of\nIDENTIFIER pattern\nCOLON :\nDOT .\nDOT .\nDOT .\nTEMPLATE template\nIDENTIFIER branch\nOPEN_PAREN (\nIDENTIFIER inp\nCOMMA ,\nCOMMA ,\nIDENTIFIER action\nCLOSE_PAREN )\nEQUALS_OPERATOR =\nINDENT     \nVARIABLE var\nIDENTIFIER mmlen\nEQUALS_OPERATOR =\nIDENTIFIER matchLen\nOPEN_PAREN (\nIDENTIFIER inp\nCOMMA ,\nIDENTIFIER mmpatterns\nOPEN_BRACK [\nCLOSE_BRACK ]\nCOMMA ,\nIDENTIFIER matches\nCOMMA ,\nIDENTIFIER mmpos\nCLOSE_PAREN )\nINDENT     \nIDENTIFIER if\nIDENTIFIER mmlen\nGREATER_THAN >\nCOLON :\nINDENT     \nIDENTIFIER action\nINDENT     \nIDENTIFIER inc\nOPEN_PAREN (\nIDENTIFIER mmpos\nCOMMA ,\nIDENTIFIER mmlen\nCLOSE_PAREN )\nINDENT     \nBREAK break\nIDENTIFIER searchSubs\nTEMPLATE template\nIDENTIFIER searchLoop\nOPEN_PAREN (\nIDENTIFIER inp\nCOMMA ,\nIDENTIFIER actions\nCLOSE_PAREN )\nOPEN_BRACE {\nDOT .\nIDENTIFIER dirty\nCLOSE_BRACE }\nEQUALS_OPERATOR =\nINDENT     \nVARIABLE var\nIDENTIFIER mmpos\nEQUALS_OPERATOR =\nINDENT     \nWHILE while\nIDENTIFIER mmpos\nLESS_THAN <\nIDENTIFIER inp\nDOT .\nIDENTIFIER len\nCOLON :\nINDENT     \nBLOCK block\nIDENTIFIER searchSubs\nCOLON :\nINDENT     \nINDENT     \nIDENTIFIER actions\nINDENT     \nINDENT     \nIDENTIFIER inc\nOPEN_PAREN (\nIDENTIFIER mmpos\nCLOSE_PAREN )