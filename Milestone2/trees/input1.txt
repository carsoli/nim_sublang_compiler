StmtList
  VarSection
    IdentDefs
      Ident "x"
      Ident "y"
      Ident "z"
      Ident "int"
      Empty
  Asgn
    Ident "x"
    IntLit 10
  Asgn
    Ident "y"
    IntLit 25
  Asgn
    Ident "z"
    Infix
      Ident "+"
      Ident "x"
      Ident "y"
  Command
    Ident "echo"
    Par
      StrLit "sum of "
      Ident "x"
      StrLit " and "
      Ident "y"
      StrLit " is "
      Ident "z"
  VarSection
    IdentDefs
      Ident "j"
      Ident "k"
      Ident "int"
      Empty
    IdentDefs
      Ident "a"
      Ident "b"
      Ident "c"
      Ident "string"
      Empty
  Asgn
    Ident "j"
    IntLit 60
  Asgn
    Ident "k"
    Infix
      Ident "+"
      IntLit 5
      Ident "j"
  Asgn
    Ident "a"
    StrLit " hello world "
  Asgn
    Ident "b"
    StrLit "Bye world"
  Asgn
    Ident "c"
    StrLit "Welcome"
  Command
    Ident "echo"
    Par
      Ident "j"
      StrLit " : "
      Ident "k"
  Command
    Ident "echo"
    Par
      Ident "a"
      StrLit " : "
      Ident "b"
      StrLit " : "
      Ident "c"
  ConstSection
    ConstDef
      Ident "x1"
      Empty
      IntLit 1
    ConstDef
      Ident "y1"
      Empty
      IntLit 2
    ConstDef
      Ident "z1"
      Empty
      Infix
        Ident "+"
        Ident "y1"
        IntLit 5
  Command
    Ident "echo"
    Par
      Ident "x1"
      StrLit " : "
      Ident "y1"
      StrLit " : "
      Ident "z1"
  LetSection
    IdentDefs
      Ident "x2"
      Empty
      StrLit "abc"
  Command
    Ident "echo"
    Par
      Ident "x2"
  VarSection
    IdentDefs
      Ident "name"
      Empty
      StrLit ""
  IfStmt
    ElifBranch
      Infix
        Ident "=="
        Ident "name"
        StrLit ""
      StmtList
        Command
          Ident "echo"
          StrLit "Poor soul, you lost your name?"
    ElifBranch
      Infix
        Ident "=="
        Ident "name"
        StrLit "name"
      StmtList
        Command
          Ident "echo"
          StrLit "Very funny, your name is name."
    Else
      StmtList
        Command
          Ident "echo"
          StrLit "Hi, "
          Ident "name"
          StrLit "!"
  Asgn
    Ident "name"
    StrLit "potato"
  CaseStmt
    Ident "name"
    OfBranch
      StrLit ""
      StmtList
        Command
          Ident "echo"
          StrLit "Poor soul, you lost your name?"
    OfBranch
      StrLit "name"
      StmtList
        Command
          Ident "echo"
          StrLit "Very funny, your name is name."
    OfBranch
      StrLit "Dave"
      StrLit "Frank"
      StmtList
        Command
          Ident "echo"
          StrLit "Cool name!"
    Else
      StmtList
        Command
          Ident "echo"
          StrLit "Hi, "
          Ident "name"
          StrLit "!"
  VarSection
    IdentDefs
      Ident "accm"
      Empty
      StrLit ""
  ForStmt
    Ident "letter"
    Infix
      Ident ".."
      CharLit 97
      CharLit 122
    StmtList
      Call
        DotExpr
          Ident "accm"
          Ident "add"
        Ident "letter"
  Command
    Ident "echo"
    Par
      Ident "accm"
  VarSection
    IdentDefs
      Ident "x3"
      Empty
      IntLit 1
  WhileStmt
    Infix
      Ident "<="
      Ident "x3"
      IntLit 5
    StmtList
      Command
        Ident "echo"
        StrLit "Counting : "
        Ident "x3"
      Asgn
        Ident "x3"
        Infix
          Ident "+"
          Ident "x3"
          IntLit 1
  ForStmt
    Ident "i"
    Infix
      Ident ".."
      IntLit 1
      IntLit 5
    StmtList
      Command
        Ident "echo"
        StrLit "i is "
        Ident "i"
  VarSection
    IdentDefs
      Ident "s"
      Empty
      StrLit "some string"
  ForStmt
    Ident "i"
    Infix
      Ident "..<"
      IntLit 0
      DotExpr
        Ident "s"
        Ident "len"
    StmtList
      Command
        Ident "echo"
        StrLit "char in s is "
        BracketExpr
          Ident "s"
          Ident "i"
  WhileStmt
    Ident "true"
    StmtList
      Command
        Ident "echo"
        StrLit "looping"
      BreakStmt
        Empty
  ConstSection
    ConstDef
      Ident "system"
      Empty
      StrLit "linux"
  WhenStmt
    ElifBranch
      Infix
        Ident "=="
        Ident "system"
        StrLit "windows"
      StmtList
        Command
          Ident "echo"
          StrLit "running on Windows!"
    ElifBranch
      Infix
        Ident "=="
        Ident "system"
        StrLit "linux"
      StmtList
        Command
          Ident "echo"
          StrLit "running on Linux!"
    ElifBranch
      Infix
        Ident "=="
        Ident "system"
        StrLit "macosx"
      StmtList
        Command
          Ident "echo"
          StrLit "running on Mac OS X!"
    Else
      StmtList
        Command
          Ident "echo"
          StrLit "unknown operating system"
  VarSection
    IdentDefs
      Ident "x4"
      Empty
      Ident "true"
  VarSection
    IdentDefs
      Ident "y4"
      Empty
      Ident "true"
  IfStmt
    ElifBranch
      Ident "x4"
      StmtList
        Asgn
          Ident "x4"
          Ident "false"
  IfStmt
    ElifBranch
      Prefix
        Ident "not"
        Ident "x4"
      StmtList
        IfStmt
          ElifBranch
            Ident "y4"
            StmtList
              Asgn
                Ident "y4"
                Ident "false"
          Else
            StmtList
              Asgn
                Ident "y4"
                Ident "true"
  Command
    Ident "echo"
    Ident "y4"
  IfStmt
    ElifBranch
      Prefix
        Ident "not"
        Ident "x4"
      StmtList
        Asgn
          Ident "x4"
          Ident "true"
        Asgn
          Ident "y4"
          Ident "true"
  Command
    Ident "echo"
    StrLit "x4 is "
    Ident "x4"
    StrLit " y4 is "
    Ident "y4"
  ProcDef
    Ident "yes"
    Empty
    Empty
    FormalParams
      Ident "bool"
      IdentDefs
        Ident "question"
        Ident "string"
        Empty
    Empty
    Empty
    StmtList
      Command
        Ident "echo"
        Ident "question"
        StrLit " (y/n)"
      VarSection
        IdentDefs
          Ident "readline"
          Empty
          StrLit "n"
      WhileStmt
        Ident "true"
        StmtList
          CaseStmt
            Ident "readline"
            OfBranch
              StrLit "y"
              StrLit "Y"
              StrLit "yes"
              StrLit "Yes"
              StmtList
                ReturnStmt
                  Ident "true"
            OfBranch
              StrLit "n"
              StrLit "N"
              StrLit "no"
              StrLit "No"
              StmtList
                ReturnStmt
                  Ident "false"
            Else
              StmtList
                Command
                  Ident "echo"
                  StrLit "Please be clear: yes or no"
  IfStmt
    ElifBranch
      Call
        Ident "yes"
        StrLit "Should I delete all your important files?"
      StmtList
        Command
          Ident "echo"
          StrLit "I\'m sorry Dave, I\'m afraid I can\'t do that."
    Else
      StmtList
        Command
          Ident "echo"
          StrLit "I think you know what the problem is just as well as I do."
  LetSection
    IdentDefs
      Ident "x5"
      Empty
      IntLit 0
    IdentDefs
      Ident "y5"
      Empty
      Int8Lit 0
    IdentDefs
      Ident "z5"
      Empty
      Int64Lit 0
    IdentDefs
      Ident "u5"
      Empty
      UIntLit
  Command
    Ident "echo"
    StrLit "x5 is "
    Ident "x5"
    StrLit " y5 is "
    Ident "y5"
    StrLit " z5 is "
    Ident "z5"
    StrLit " u5 is "
    Ident "u5"
  BlockStmt
    Ident "outer"
    StmtList
      ForStmt
        Ident "i"
        Infix
          Ident ".."
          IntLit 0
          IntLit 2000
        StmtList
          ForStmt
            Ident "j"
            Infix
              Ident ".."
              IntLit 0
              IntLit 2000
            StmtList
              IfStmt
                ElifBranch
                  Infix
                    Ident "=="
                    Infix
                      Ident "+"
                      Ident "i"
                      Ident "j"
                    IntLit 3145
                  StmtList
                    Command
                      Ident "echo"
                      Ident "i"
                      StrLit ", "
                      Ident "j"
                    BreakStmt
                      Ident "outer"
  ProcDef
    Ident "fibonacci"
    Empty
    Empty
    FormalParams
      Ident "int"
      IdentDefs
        Ident "n"
        Ident "int"
        Empty
    Empty
    Empty
    StmtList
      IfStmt
        ElifBranch
          Infix
            Ident "<"
            Ident "n"
            IntLit 2
          StmtList
            Asgn
              Ident "result"
              Ident "n"
        Else
          StmtList
            Asgn
              Ident "result"
              Infix
                Ident "+"
                Call
                  Ident "fibonacci"
                  Infix
                    Ident "-"
                    Ident "n"
                    IntLit 1
                DotExpr
                  Par
                    Infix
                      Ident "-"
                      Ident "n"
                      IntLit 2
                  Ident "fibonacci"
  Command
    Ident "echo"
    Call
      Ident "fibonacci"
      IntLit 10
  TypeSection
    TypeDef
      Ident "IntArray"
      Empty
      BracketExpr
        Ident "array"
        Infix
          Ident ".."
          IntLit 0
          IntLit 5
        Ident "int"
    TypeDef
      Ident "QuickArray"
      Empty
      BracketExpr
        Ident "array"
        IntLit 6
        Ident "int"
  VarSection
    IdentDefs
      Ident "x6"
      Ident "IntArray"
      Empty
    IdentDefs
      Ident "y6"
      Ident "QuickArray"
      Empty
  Asgn
    Ident "x6"
    Bracket
      IntLit 1
      IntLit 2
      IntLit 3
      IntLit 4
      IntLit 5
      IntLit 6
  Asgn
    Ident "y6"
    Ident "x6"
  ForStmt
    Ident "i"
    Infix
      Ident ".."
      IntLit 0
      IntLit 5
    StmtList
      Command
        Ident "echo"
        BracketExpr
          Ident "x6"
          Ident "i"
        BracketExpr
          Ident "y6"
          Ident "i"
  ForStmt
    Ident "value"
    Prefix
      Ident "@"
      Bracket
        IntLit 3
        IntLit 4
        IntLit 5
    StmtList
      Command
        Ident "echo"
        Ident "value"
  ForStmt
    Ident "i"
    Ident "value"
    Prefix
      Ident "@"
      Bracket
        IntLit 3
        IntLit 4
        IntLit 5
    StmtList
      Command
        Ident "echo"
        StrLit "index: "
        Prefix
          Ident "$"
          Ident "i"
        StrLit ", value:"
        Prefix
          Ident "$"
          Ident "value"
  ProcDef
    Ident "echoItem"
    Empty
    Empty
    FormalParams
      Empty
      IdentDefs
        Ident "x"
        Ident "string"
        Empty
    Empty
    Empty
    StmtList
      Command
        Ident "echo"
        Ident "x"
  ProcDef
    Ident "forEach"
    Empty
    Empty
    FormalParams
      Empty
      IdentDefs
        Ident "action"
        ProcTy
          FormalParams
            Empty
            IdentDefs
              Ident "x"
              Ident "string"
              Empty
          Empty
        Empty
    Empty
    Empty
    StmtList
      ConstSection
        ConstDef
          Ident "data"
          Empty
          Bracket
            StrLit "hi"
            StrLit "bye"
            StrLit "later"
            StrLit "not today"
            StrLit "leave[]"
      ForStmt
        Ident "d"
        Call
          Ident "items"
          Ident "data"
        StmtList
          Call
            Ident "action"
            Ident "d"
  Call
    Ident "forEach"
    Ident "echoItem"
