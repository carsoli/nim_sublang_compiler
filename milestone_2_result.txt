IMPORT  import
IDENTIFIER  re
COMMA  ,
IDENTIFIER  macros
MACRO  macro
IDENTIFIER  multiMatch
OPEN_PAREN  (
IDENTIFIER  inp
COLON  :
IDENTIFIER  string
SEMI_COLON  ;
IDENTIFIER  sections
COLON  :
IDENTIFIER  untyped
CLOSE_PAREN  )
COLON  :
IDENTIFIER  untyped
OP1  =
ERROR_INDENT    
TEMPLATE  template
IDENTIFIER  branch
OPEN_PAREN  (
IDENTIFIER  inp
COMMA  ,
IDENTIFIER  p
COMMA  ,
IDENTIFIER  action
CLOSE_PAREN  )
OP1  =
INDENT      
VARIABLE  var
IDENTIFIER  mmlen
OP1  =
IDENTIFIER  matchLen
OPEN_PAREN  (
IDENTIFIER  inp
COMMA  ,
IDENTIFIER  mmpatterns
OPEN_BRACK  [
IDENTIFIER  p
CLOSE_BRACK  ]
COMMA  ,
IDENTIFIER  matches
COMMA  ,
IDENTIFIER  mmpos
CLOSE_PAREN  )
IF  if
IDENTIFIER  mmlen
OP5  >
INT_LIT  0
COLON  :
ERROR_INDENT    
IDENTIFIER  action
ERROR_INDENT    
IDENTIFIER  inc
OPEN_PAREN  (
IDENTIFIER  mmpos
COMMA  ,
IDENTIFIER  mmlen
CLOSE_PAREN  )
ERROR_INDENT    
BREAK  break
IDENTIFIER  searchSubs
ERROR_INDENT    
DEDENT  
TEMPLATE  template
IDENTIFIER  searchLoop
OPEN_PAREN  (
IDENTIFIER  inp
COMMA  ,
IDENTIFIER  actions
CLOSE_PAREN  )
OPEN_BRACE  {
DOT  .
IDENTIFIER  dirty
CLOSE_BRACE  }
OP1  =
INDENT      
VARIABLE  var
IDENTIFIER  mmpos
OP1  =
INT_LIT  0
WHILE  while
IDENTIFIER  mmpos
OP5  <
IDENTIFIER  inp
DOT  .
IDENTIFIER  len
COLON  :
ERROR_INDENT    
BLOCK  block
IDENTIFIER  searchSubs
COLON  :
INDENT      
IDENTIFIER  actions
IDENTIFIER  inc
OPEN_PAREN  (
IDENTIFIER  mmpos
CLOSE_PAREN  )