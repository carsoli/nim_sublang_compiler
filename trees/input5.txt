StmtList
  FromStmt
    Ident "random"
    Ident "random"
    Ident "randomize"
    Ident "shuffle"
  FromStmt
    Ident "strutils"
    Ident "repeat"
  Call
    Ident "randomize"
  ProcDef
    Ident "gen"
    Empty
    Empty
    FormalParams
      Ident "string"
      IdentDefs
        Ident "n"
        Ident "int"
        Empty
    Empty
    Empty
    StmtList
      Asgn
        Ident "result"
        Call
          DotExpr
            StrLit "[]"
            Ident "repeat"
          Ident "n"
      Call
        Ident "shuffle"
        Ident "result"
  ProcDef
    Ident "balanced"
    Empty
    Empty
    FormalParams
      Ident "bool"
      IdentDefs
        Ident "txt"
        Ident "string"
        Empty
    Empty
    Empty
    StmtList
      VarSection
        IdentDefs
          Ident "b"
          Empty
          IntLit 0
      ForStmt
        Ident "c"
        Ident "txt"
        StmtList
          CaseStmt
            Ident "c"
            OfBranch
              CharLit 91
              StmtList
                Call
                  Ident "inc"
                  Ident "b"
            OfBranch
              CharLit 93
              StmtList
                Call
                  Ident "dec"
                  Ident "b"
                IfStmt
                  ElifBranch
                    Infix
                      Ident "<"
                      Ident "b"
                      IntLit 0
                    StmtList
                      ReturnStmt
                        Ident "false"
            Else
              StmtList
                DiscardStmt
                  Empty
      Infix
        Ident "=="
        Ident "b"
        IntLit 0
  ForStmt
    Ident "n"
    Infix
      Ident ".."
      IntLit 0
      IntLit 9
    StmtList
      LetSection
        IdentDefs
          Ident "s"
          Empty
          Call
            Ident "gen"
            Ident "n"
      Command
        Ident "echo"
        StrLit "\'"
        Ident "s"
        StrLit "\' is "
        StmtListExpr
          IfStmt
            ElifBranch
              Call
                Ident "balanced"
                Ident "s"
              StrLit "balanced"
            Else
              StrLit "not balanced"
